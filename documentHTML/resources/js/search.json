[[{"i":"hpa3---blockchain---documentation","l":"HPA3 - Blockchain - Documentation","p":["This library is a collection of modules that contain functionality for a etherum wallet (like Metamask).","This wallet SDK built base on web3js, web3-core"]}],[{"l":"Getting started","p":["This SDK is wroted by typescript"]},{"l":"Adding Wallet SDK"}],[{"l":"API Reference","p":["Here are the articles in this section","WalletBaseExtend"]}],[{"l":"WalletBaseExtend","p":["Extend Wallet like metamask base on WalletBase in web3-core"]},{"l":"Main functions"},{"l":"createWallet","p":["Generates the wallet with one account. If wallets already exist they will not be overridden."]},{"l":"Parameters","p":["none"]},{"l":"Returns","p":[": The generated wallet."]},{"l":"Example"},{"l":"createWalletFromMnemonic","p":["Generates the wallet with one account from mnemonic. If wallets already exist they will not be overridden."]},{"i":"parameters-1","l":"Parameters","p":["- : A string with 12 valid words as mnemonic to generate wallet."]},{"i":"returns-1","l":"Returns","p":[": The generated wallet."]},{"i":"example-1","l":"Example"},{"l":"addAccountFromPrivateKey","p":["Add account from private key to wallet"]},{"i":"parameters-2","l":"Parameters","p":["- : A private key"]},{"i":"returns-2","l":"Returns","p":[": The wallet."]},{"i":"example-2","l":"Example"},{"l":"addIncrementalAccount","p":["Add next account from mnemonic"]},{"i":"parameters-3","l":"Parameters","p":["none"]},{"i":"returns-3","l":"Returns","p":[": The wallet."]},{"i":"example-3","l":"Example"},{"l":"removeAccount","p":["Remove an imported account from wallet"]},{"i":"parameters-4","l":"Parameters","p":["- : An index of imported account in walletImported"]},{"i":"returns-4","l":"Returns","p":[": The wallet."]},{"i":"example-4","l":"Example"},{"l":"encryptWallet","p":["Encrypt wallet with password"]},{"i":"parameters-5","l":"Parameters","p":["- : The password which will be used for encryption."]},{"i":"returns-5","l":"Returns","p":[": The added wallet with core wallet encrypted."]},{"i":"example-5","l":"Example"},{"l":"decryptWallet","p":["Decrypt wallet with password"]},{"i":"parameters-6","l":"Parameters","p":["- : The password which will be used for decryption."]},{"i":"returns-6","l":"Returns","p":[": The added wallet with core wallet decrypted."]},{"i":"example-6","l":"Example"},{"l":"transfer","p":["Transfer from an account in wallet to an address"]},{"i":"parameters-7","l":"Parameters","p":["- : The account id in wallet.","- : The address to transfer to.","- : The value to transfer."]},{"i":"returns-7","l":"Returns","p":["- : The nonce of the transaction.","- : A transaction receipt object, or null if no receipt was found.","status- Boolean: TRUE if the transaction was successful, FALSE if the EVM reverted the transaction.","blockHash 32 Bytes - String: Hash of the block where this transaction was in.","blockNumber- Number(or hex String): Block number where this transaction was in.","transactionHash 32 Bytes - String: Hash of the transaction.","transactionIndex- Number(or hex String): Integer of the transactions index position in the block.","from- String: Address of the sender.","to- String: Address of the receiver. null when itâ€™s a contract creation transaction.","contractAddress- String: The contract address created, if the transaction was a contract creation, otherwise null.","cumulativeGasUsed- Number(or hex String): The total amount of gas used when this transaction was executed in the block.","gasUsed- Number(or hex String): The amount of gas used by this specific transaction alone.","logs- Array: Array of log objects, which this transaction generated."]},{"i":"example-7","l":"Example"},{"l":"Getters"},{"l":"getListAccount","p":["Get list of account address in wallet"]},{"i":"parameters-8","l":"Parameters","p":[": The wallet object."]},{"i":"returns-8","l":"Returns","p":[": List of account address in wallet."]},{"i":"example-8","l":"Example"},{"l":"getMnemonic","p":["Get mnemonic of added wallet"]},{"i":"parameters-9","l":"Parameters","p":["none"]},{"i":"returns-9","l":"Returns","p":[": A string of 12 valid mnemonic word of wallet."]},{"i":"example-9","l":"Example"},{"l":"getWalletBase","p":["Get WalletBase of WalletBaseExtend"]},{"i":"parameters-10","l":"Parameters","p":["none"]},{"i":"returns-10","l":"Returns","p":[": A WalletBase object in web3-core"]},{"i":"example-10","l":"Example"},{"l":"getWalletImported","p":["Get list index of account imported by private key"]},{"i":"parameters-11","l":"Parameters","p":["none"]},{"i":"returns-11","l":"Returns","p":[": A list of index of account imported by private key"]},{"i":"example-11","l":"Example"},{"l":"getAccount","p":["Get account from wallet by index"]},{"i":"parameters-12","l":"Parameters","p":["- : Index of account in wallet"]},{"i":"returns-12","l":"Returns","p":[": The account object base from web3-core"]},{"i":"example-12","l":"Example"},{"l":"getDefaultAccount","p":["Get default account of wallet"]},{"i":"parameters-13","l":"Parameters","p":["none"]},{"i":"returns-13","l":"Returns","p":[": The account object base from web3-core"]},{"i":"example-13","l":"Example"},{"l":"getNonce","p":["Get nonce of an address"]},{"i":"parameters-14","l":"Parameters","p":["- : Address of account"]},{"i":"returns-14","l":"Returns","p":[": The nonce of account"]},{"i":"example-14","l":"Example"},{"l":"Setters"},{"l":"setDefaultAccount","p":["Set default account of wallet to interact like Metamask"]},{"i":"parameters-15","l":"Parameters","p":["- : index of account need to set"]},{"i":"returns-15","l":"Returns","p":[": The wallet."]},{"i":"example-15","l":"Example"}]]